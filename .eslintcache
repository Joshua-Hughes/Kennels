[{"C:\\Users\\Joshua\\workspace\\kennels\\src\\index.js":"1","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\Kennel.js":"2","C:\\Users\\Joshua\\workspace\\kennels\\src\\reportWebVitals.js":"3","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\animal\\AnimalCard.js":"4","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\ApplicationViews.js":"5","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\nav\\NavBar.js":"6","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\Home.js":"7","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\customer\\CustomerCard.js":"8","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\employee\\EmployeeCard.js":"9","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\location\\LocationCard.js":"10","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\animal\\AnimalProvider.js":"11","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\animal\\AnimalList.js":"12","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\customer\\CustomerProvider.js":"13","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\customer\\CustomerList.js":"14","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\employee\\EmployeeProvider.js":"15","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\employee\\EmployeeList.js":"16","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\location\\LocationProvider.js":"17","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\location\\LocationList.js":"18","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\animal\\AnimalForm.js":"19","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\animal\\AnimalDetail.js":"20","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\employee\\EmployeeForm.js":"21","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\location\\LocationForm.js":"22","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\employee\\EmployeeDetail.js":"23","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\location\\LocationDetail.js":"24"},{"size":350,"mtime":1611249107812,"results":"25","hashOfConfig":"26"},{"size":247,"mtime":1611248963984,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":465,"mtime":1611681007609,"results":"29","hashOfConfig":"26"},{"size":3405,"mtime":1611776726829,"results":"30","hashOfConfig":"26"},{"size":912,"mtime":1611246721602,"results":"31","hashOfConfig":"26"},{"size":318,"mtime":1611249084339,"results":"32","hashOfConfig":"26"},{"size":286,"mtime":1611348644441,"results":"33","hashOfConfig":"26"},{"size":451,"mtime":1611691519970,"results":"34","hashOfConfig":"26"},{"size":441,"mtime":1611767857171,"results":"35","hashOfConfig":"26"},{"size":1663,"mtime":1611848961812,"results":"36","hashOfConfig":"26"},{"size":1294,"mtime":1611676269265,"results":"37","hashOfConfig":"26"},{"size":902,"mtime":1611604200592,"results":"38","hashOfConfig":"26"},{"size":665,"mtime":1611347045051,"results":"39","hashOfConfig":"26"},{"size":1102,"mtime":1611691430463,"results":"40","hashOfConfig":"26"},{"size":969,"mtime":1611676630135,"results":"41","hashOfConfig":"26"},{"size":1102,"mtime":1611774692553,"results":"42","hashOfConfig":"26"},{"size":805,"mtime":1611678679294,"results":"43","hashOfConfig":"26"},{"size":5193,"mtime":1611676395723,"results":"44","hashOfConfig":"26"},{"size":1225,"mtime":1611849162876,"results":"45","hashOfConfig":"26"},{"size":2649,"mtime":1611681785223,"results":"46","hashOfConfig":"26"},{"size":2146,"mtime":1611769288565,"results":"47","hashOfConfig":"26"},{"size":765,"mtime":1611691333972,"results":"48","hashOfConfig":"26"},{"size":896,"mtime":1611848835438,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"31psxa",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Joshua\\workspace\\kennels\\src\\index.js",[],["107","108"],"C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\Kennel.js",[],"C:\\Users\\Joshua\\workspace\\kennels\\src\\reportWebVitals.js",[],"C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\animal\\AnimalCard.js",[],"C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\ApplicationViews.js",[],"C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\nav\\NavBar.js",[],"C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\Home.js",[],"C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\customer\\CustomerCard.js",[],"C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\employee\\EmployeeCard.js",[],"C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\location\\LocationCard.js",[],"C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\animal\\AnimalProvider.js",[],"C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\animal\\AnimalList.js",["109","110"],"import React, { useContext, useEffect } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { AnimalContext } from \"./AnimalProvider\"\r\nimport { LocationContext } from \"../location/LocationProvider\"\r\nimport { CustomerContext } from \"../customer/CustomerProvider\"\r\nimport { Animal } from \"./AnimalCard\"\r\nimport \"./Animal.css\"\r\n\r\nexport const AnimalList = () => {\r\n    const { animals, getAnimals } = useContext(AnimalContext)\r\n    const { locations, getLocations } = useContext(LocationContext)\r\n    const { customers, getCustomers } = useContext(CustomerContext)\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        console.log(\"AnimalList: Initial render before data\")\r\n        getLocations()\r\n            .then(getCustomers)\r\n            .then(getAnimals)\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"animals\">\r\n            <h2>Animals</h2>\r\n            <button onClick={() => { history.push(\"/animals/create\") }}>\r\n                Add Animal\r\n            </button>\r\n            {\r\n                animals.map(animal => {\r\n                    const owner = customers.find(c => c.id === animal.customerId)\r\n                    return <Animal key={animal.id} animal={animal} owner={owner} />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\customer\\CustomerProvider.js",[],"C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\customer\\CustomerList.js",["111"],"import React, { useContext, useEffect } from \"react\"\r\nimport { CustomerContext } from \"./CustomerProvider\"\r\nimport { CustomerCard } from \"./CustomerCard\"\r\nimport \"./Customer.css\"\r\n\r\nexport const CustomerList = () => {\r\n  const { customers, getCustomers } = useContext(CustomerContext)\r\n\r\n  useEffect(() => {\r\n    console.log(\"CustomerList: useEffect - getCustomers\")\r\n    getCustomers()\r\n\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"customers\">\r\n      {console.log(\"CustomerList: Render\", customers)}\r\n      {\r\n        customers.map(customer => {\r\n          return <CustomerCard key={customer.id} customer={customer} />\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\employee\\EmployeeProvider.js",[],"C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\employee\\EmployeeList.js",["112","113"],"import React, { useContext, useEffect } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { EmployeeContext } from \"./EmployeeProvider\"\r\nimport { EmployeeCard } from \"./EmployeeCard\"\r\nimport { LocationContext } from \"../location/LocationProvider\"\r\nimport \"./Employee.css\"\r\n\r\nexport const EmployeeList = () => {\r\n  const { employees, getEmployees } = useContext(EmployeeContext)\r\n  const { locations, getLocations } = useContext(LocationContext)\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    console.log(\"EmployeeList: useEffect - getEmployees\")\r\n    getLocations()\r\n      .then(getEmployees)\r\n\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"employees\">\r\n      <button onClick={() => { history.push(\"/employees/create\") }}>\r\n        New Employee\r\n      </button>\r\n      \r\n      {\r\n        employees.map(employees => {\r\n          return <EmployeeCard key={employees.id} employees={employees} />\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\location\\LocationProvider.js",[],"C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\location\\LocationList.js",["114"],"import React, { useContext, useEffect } from \"react\"\r\nimport { LocationContext } from \"./LocationProvider\"\r\nimport { LocationCard } from \"./LocationCard\"\r\nimport \"./Location.css\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nexport const LocationList = () => {\r\n  const { locations, getLocations } = useContext(LocationContext)\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    console.log(\"LocationList: useEffect - getLocations\")\r\n    getLocations()\r\n\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"locations\">\r\n      <button onClick={() => { history.push(\"/locations/create\") }}>\r\n        New Location\r\n      </button>\r\n\r\n      {\r\n        locations.map(locations => {\r\n          return <LocationCard key={locations.id} locations={locations} />\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\animal\\AnimalForm.js",["115"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { LocationContext } from \"../location/LocationProvider\"\r\nimport { AnimalContext } from \"../animal/AnimalProvider\"\r\nimport { CustomerContext } from \"../customer/CustomerProvider\"\r\nimport \"./Animal.css\"\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const AnimalForm = () => {\r\n    const { addAnimal } = useContext(AnimalContext)\r\n    const { locations, getLocations } = useContext(LocationContext)\r\n    const { customers, getCustomers } = useContext(CustomerContext)\r\n\r\n    /*\r\n    With React, we do not target the DOM with `document.querySelector()`. Instead, our return (render) reacts to state or props.\r\n\r\n    Define the intial state of the form inputs with useState()\r\n    */\r\n\r\n    const [animal, setAnimal] = useState({\r\n        name: \"\",\r\n        breed: \"\",\r\n        locationId: 0,\r\n        customerId: 0\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    /*\r\n    Reach out to the world and get customers state\r\n    and locations state on initialization, so we can provide their data in the form dropdowns\r\n    */\r\n    useEffect(() => {\r\n        getCustomers().then(getLocations)\r\n    }, [])\r\n\r\n    //when a field changes, update state. The return will re-render and display based on the values in state\r\n    // NOTE! What's happening in this function can be very difficult to grasp. Read it over many times and ask a lot questions about it.\r\n    //Controlled component\r\n    const handleControlledInputChange = (event) => {\r\n        /* When changing a state object or array,\r\n        always create a copy, make changes, and then set state.*/\r\n        const newAnimal = { ...animal }\r\n        let selectedVal = event.target.value\r\n        // forms always provide values as strings. But we want to save the ids as numbers. This will cover both customer and location ids\r\n        if (event.target.id.includes(\"Id\")) {\r\n            selectedVal = parseInt(selectedVal)\r\n        }\r\n        /* Animal is an object with properties.\r\n        Set the property to the new value\r\n        using object bracket notation. */\r\n        newAnimal[event.target.id] = selectedVal\r\n        // update state\r\n        setAnimal(newAnimal)\r\n    }\r\n\r\n    const handleClickSaveAnimal = (event) => {\r\n        event.preventDefault() //Prevents the browser from submitting the form\r\n\r\n        const locationId = animal.locationId\r\n        const customerId = animal.customerId\r\n\r\n        if (locationId === 0 || customerId === 0) {\r\n            window.alert(\"Please select a location and a customer\")\r\n        } else {\r\n            //invoke addAnimal passing animal as an argument.\r\n            //once complete, change the url and display the animal list\r\n            addAnimal(animal)\r\n                .then(() => history.push(\"/animals\"))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"animalForm\">\r\n            <h2 className=\"animalForm__title\">New Animal</h2>\r\n            <fieldset>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Animal name:</label>\r\n                    <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Animal name\" value={animal.name} />\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"breed\">Animal breed:</label>\r\n                    <input type=\"text\" id=\"breed\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Animal breed\" value={animal.breed} />\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"location\">Assign to location: </label>\r\n                    <select defaultValue={animal.locationId} name=\"locationId\" id=\"locationId\" onChange={handleControlledInputChange} className=\"form-control\" >\r\n                        <option value=\"0\">Select a location</option>\r\n                        {locations.map(l => (\r\n                            <option key={l.id} value={l.id}>\r\n                                {l.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"customerId\">Customer: </label>\r\n                    <select defaultValue={animal.customerId} name=\"customer\" id=\"customerId\" onChange={handleControlledInputChange} className=\"form-control\" >\r\n                        <option value=\"0\">Select a customer</option>\r\n                        {customers.map(c => (\r\n                            <option key={c.id} value={c.id}>\r\n                                {c.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </fieldset>\r\n            <button className=\"btn btn-primary\"\r\n                onClick={handleClickSaveAnimal}>\r\n                Save Animal\r\n          </button>\r\n        </form>\r\n    )\r\n}\r\n","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\animal\\AnimalDetail.js",["116"],"C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\employee\\EmployeeForm.js",["117"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { LocationContext } from \"../location/LocationProvider\"\r\nimport { EmployeeContext } from \"./EmployeeProvider\"\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const EmployeeForm = () => {\r\n    const { addEmployees } = useContext(EmployeeContext)\r\n    const { locations, getLocations } = useContext(LocationContext)\r\n\r\n    const [employee, setEmployee] = useState({\r\n        name: \"\",\r\n        locationId: 0\r\n    });\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        getLocations()\r\n    }, [])\r\n\r\n    const handleControlledInputChange = (event) => {\r\n        const newEmployee = { ...employee }\r\n        let selectedVal = event.target.value\r\n\r\n        if (event.target.id.includes(\"Id\")) {\r\n            selectedVal = parseInt(selectedVal)\r\n        }\r\n\r\n        newEmployee[event.target.id] = selectedVal\r\n        setEmployee(newEmployee)\r\n    }\r\n\r\n    const handleClickSaveEmployee = (event) => {\r\n        event.preventDefault()\r\n\r\n        const locationId = employee.locationId\r\n\r\n        if (locationId === 0) {\r\n            window.alert(\"Please select a location.\")\r\n        } else {\r\n            addEmployees(employee)\r\n                .then(() => history.push(\"/employees\"))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"employeeForm\">\r\n            <h2 className=\"employeeForm__title\">New Employee</h2>\r\n            <fieldset>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Employee name:</label>\r\n                    <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Employee name\" value={employee.name} />\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"location\">Assign to location: </label>\r\n                    <select defaultValue={employee.locationId} name=\"locationId\" id=\"locationId\" onChange={handleControlledInputChange} className=\"form-control\" >\r\n                        <option value=\"0\">Select a location</option>\r\n                        {locations.map(l => (\r\n                            <option key={l.id} value={l.id}>\r\n                                {l.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </fieldset>\r\n            <button className=\"btn btn-primary\"\r\n                onClick={handleClickSaveEmployee}>\r\n                Save Employee\r\n          </button>\r\n        </form>\r\n    )\r\n}","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\location\\LocationForm.js",["118","119","120"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { LocationContext } from \"../location/LocationProvider\"\r\nimport { AnimalContext } from \"../animal/AnimalProvider\"\r\nimport { EmployeeContext } from \"../employee/EmployeeProvider\"\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const LocationForm = () => {\r\n    const { addLocations } = useContext(LocationContext)\r\n\r\n    const [location, setLocation] = useState({\r\n        name: \"\",\r\n        address: \"\",\r\n    });\r\n\r\n    const history = useHistory()\r\n\r\n\r\n    const handleControlledInputChange = (event) => {\r\n        const newLocation = { ...location }\r\n        let selectedVal = event.target.value\r\n\r\n        if (event.target.id.includes(\"Id\")) {\r\n            selectedVal = parseInt(selectedVal)\r\n        }\r\n\r\n        newLocation[event.target.id] = selectedVal\r\n        setLocation(newLocation)\r\n    }\r\n\r\n    const handleClickSaveLocation = (event) => {\r\n        event.preventDefault()\r\n\r\n            addLocations(location)\r\n                .then(() => history.push(\"/locations\"))\r\n        }\r\n    \r\n\r\n    return (\r\n        <form className=\"locationForm\">\r\n            <h2 className=\"locationForm__title\">New Location</h2>\r\n            <fieldset>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Location name:</label>\r\n                    <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Location name\" value={location.name} />\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"location\">Location address: </label>\r\n                    <input type=\"text\" id=\"address\" onChange={handleControlledInputChange} className=\"form-control\" placeholder=\"Location name\" value={location.address}>\r\n                    </input>\r\n                </div>\r\n            </fieldset>\r\n            <button className=\"btn btn-primary\"\r\n                onClick={handleClickSaveLocation}>\r\n                Save Location\r\n          </button>\r\n        </form>\r\n    )\r\n}","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\employee\\EmployeeDetail.js",["121"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { EmployeeContext } from \"./EmployeeProvider\"\r\nimport \"./Employee.css\"\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nexport const EmployeeDetail = () => {\r\n    const { getEmployeeById } = useContext(EmployeeContext)\r\n\r\n    const [employee, setEmployee] = useState({})\r\n\r\n    const {employeeId} = useParams()\r\n\r\n    useEffect(() => {\r\n        getEmployeeById(employeeId)\r\n        .then((response) => {\r\n            setEmployee(response)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <section className=\"employee\">\r\n            <h3 className=\"employee__name\">{employee.name}</h3>\r\n            <div className=\"employee__location\">{employee.location?.name}</div>\r\n        </section>\r\n    )\r\n}","C:\\Users\\Joshua\\workspace\\kennels\\src\\components\\location\\LocationDetail.js",["122","123","124"],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":11,"column":13,"nodeType":"131","messageId":"132","endLine":11,"endColumn":22},{"ruleId":"133","severity":1,"message":"134","line":21,"column":8,"nodeType":"135","endLine":21,"endColumn":10,"suggestions":"136"},{"ruleId":"133","severity":1,"message":"137","line":13,"column":6,"nodeType":"135","endLine":13,"endColumn":8,"suggestions":"138"},{"ruleId":"129","severity":1,"message":"130","line":10,"column":11,"nodeType":"131","messageId":"132","endLine":10,"endColumn":20},{"ruleId":"133","severity":1,"message":"139","line":19,"column":6,"nodeType":"135","endLine":19,"endColumn":8,"suggestions":"140"},{"ruleId":"133","severity":1,"message":"141","line":16,"column":6,"nodeType":"135","endLine":16,"endColumn":8,"suggestions":"142"},{"ruleId":"133","severity":1,"message":"143","line":34,"column":8,"nodeType":"135","endLine":34,"endColumn":10,"suggestions":"144"},{"ruleId":"133","severity":1,"message":"145","line":20,"column":6,"nodeType":"135","endLine":20,"endColumn":8,"suggestions":"146"},{"ruleId":"133","severity":1,"message":"141","line":19,"column":8,"nodeType":"135","endLine":19,"endColumn":10,"suggestions":"147"},{"ruleId":"129","severity":1,"message":"148","line":1,"column":29,"nodeType":"131","messageId":"132","endLine":1,"endColumn":38},{"ruleId":"129","severity":1,"message":"149","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":23},{"ruleId":"129","severity":1,"message":"150","line":4,"column":10,"nodeType":"131","messageId":"132","endLine":4,"endColumn":25},{"ruleId":"133","severity":1,"message":"151","line":18,"column":8,"nodeType":"135","endLine":18,"endColumn":10,"suggestions":"152"},{"ruleId":"129","severity":1,"message":"149","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":23},{"ruleId":"129","severity":1,"message":"150","line":4,"column":10,"nodeType":"131","messageId":"132","endLine":4,"endColumn":25},{"ruleId":"133","severity":1,"message":"153","line":21,"column":8,"nodeType":"135","endLine":21,"endColumn":10,"suggestions":"154"},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'locations' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAnimals', 'getCustomers', and 'getLocations'. Either include them or remove the dependency array.","ArrayExpression",["157"],"React Hook useEffect has a missing dependency: 'getCustomers'. Either include it or remove the dependency array.",["158"],"React Hook useEffect has missing dependencies: 'getEmployees' and 'getLocations'. Either include them or remove the dependency array.",["159"],"React Hook useEffect has a missing dependency: 'getLocations'. Either include it or remove the dependency array.",["160"],"React Hook useEffect has missing dependencies: 'getCustomers' and 'getLocations'. Either include them or remove the dependency array.",["161"],"React Hook useEffect has missing dependencies: 'animalId' and 'getAnimalById'. Either include them or remove the dependency array.",["162"],["163"],"'useEffect' is defined but never used.","'AnimalContext' is defined but never used.","'EmployeeContext' is defined but never used.","React Hook useEffect has missing dependencies: 'employeeId' and 'getEmployeeById'. Either include them or remove the dependency array.",["164"],"React Hook useEffect has missing dependencies: 'getLocationById' and 'locationId'. Either include them or remove the dependency array.",["165"],"no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"172","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [getAnimals, getCustomers, getLocations]",{"range":"183","text":"184"},"Update the dependencies array to be: [getCustomers]",{"range":"185","text":"186"},"Update the dependencies array to be: [getEmployees, getLocations]",{"range":"187","text":"188"},"Update the dependencies array to be: [getLocations]",{"range":"189","text":"190"},"Update the dependencies array to be: [getCustomers, getLocations]",{"range":"191","text":"192"},"Update the dependencies array to be: [animalId, getAnimalById]",{"range":"193","text":"194"},{"range":"195","text":"190"},"Update the dependencies array to be: [employeeId, getEmployeeById]",{"range":"196","text":"197"},"Update the dependencies array to be: [getLocationById, locationId]",{"range":"198","text":"199"},[798,800],"[getAnimals, getCustomers, getLocations]",[395,397],"[getCustomers]",[634,636],"[getEmployees, getLocations]",[476,478],"[getLocations]",[1179,1181],"[getCustomers, getLocations]",[589,591],"[animalId, getAnimalById]",[588,590],[530,532],"[employeeId, getEmployeeById]",[669,671],"[getLocationById, locationId]"]